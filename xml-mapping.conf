# XML Mapping configuration
#
# the configuration section matching the root element of the XML is used
# e.g. the root element for JATS documents is 'article'
#
# the namespace is removed from elements to make  xpaths simpler

[article]
title = front/article-meta/title-group/article-title
abstract = front/article-meta/abstract

first_author_surname = jats-authors(.)[1]/name/surname
author_surnames = jats-authors(.)/name/surname
first_author_full_name = jats-full-name(jats-authors(.)[1])
author_full_names = jats-full-name(jats-authors(.))

affiliation_strings = jats-aff-string(jats-author-aff(jats-authors(.)))
affiliation_institution = generic-join-children(jats-author-aff(jats-authors(.)), 'institution[not(@content-type)]', ', ')

first_reference_fields = generic-as-items(back//ref[1], './/*')
first_reference_title = generic-join-children(back//ref[1], './/article-title', ', ')

reference_fields = generic-as-items(back//ref, './/*')
reference_title = generic-join-children(back//ref, './/article-title', ', ')
reference_year = generic-join-children(back//ref, './/year', ', ')
reference_source = generic-join-children(back//ref, './/source', ', ')
reference_volume = generic-join-children(back//ref, './/volume', ', ')
reference_fpage = jats-ref-fpage(back//ref)
reference_lpage = jats-ref-lpage(back//ref)

keywords = front/article-meta/kwd-group/kwd

section_titles = body//sec/title
section_paragraphs = body//sec/p

tables = body//table-wrap/table
table_strings = generic-text-content(body//table-wrap/table)
table_labels = body//table-wrap/label
table_captions = body//table-wrap/caption
table_label_captions = generic-concat-children(body//table-wrap, '$label', ' ', '$caption')

figure_labels = body//fig/label
figure_captions = body//fig/caption
figure_label_captions = generic-concat-children(body//fig, '$label', ' ', '$caption')


[TEI]
title = teiHeader/fileDesc/titleStmt/title
abstract = teiHeader/profileDesc/abstract

first_author_surname = tei-authors(.)[1]/persName/surname
author_surnames = tei-authors(.)/persName/surname
first_author_full_name = tei-full-name(tei-authors(.)[1])
author_full_names = tei-full-name(tei-authors(.))

affiliation_strings = tei-aff-string(teiHeader//affiliation)
affiliation_institution = generic-join-children(teiHeader//affiliation, 'orgName[@type="institution"]', ', ')

first_reference_fields = generic-as-items(text/back//biblStruct[1], './/*')
first_reference_title = generic-join-children(text/back//biblStruct[1], './/title[@level="a"]', ' ')

reference_fields = generic-as-items(text/back//biblStruct, './/*')
reference_title = generic-join-children(text/back//biblStruct, './/title[@level="a"]', ' ')
reference_year = generic-join-children(text/back//biblStruct, './/date[@type="published"]/@when', ' ')
reference_source = generic-join-children(text/back//biblStruct, './/title[@level="j"]', ' ')
reference_volume = generic-join-children(text/back//biblStruct, './/biblScope[@unit="volume"]', ' ')
reference_fpage = tei-ref-fpage(text/back//biblStruct)
reference_lpage = tei-ref-lpage(text/back//biblStruct)

section_titles = text/body/div/head
section_paragraphs = text/body/div/p

keywords = teiHeader/profileDesc/textClass/keywords/term

# Note: the table contents will need to be mapped (but GROBID currently doesn't output any cells)
tables = text/body/figure[@type="table"]/table
table_strings = generic-text-content(text/body/figure[@type="table"]/table)
table_labels = text/body/figure[@type="table"]/head
table_captions = text/body/figure[@type="table"]/figDesc
table_label_captions = generic-concat-children(text/body/figure[@type="table"], '$head', ' ', '$figDesc')

figure_labels = text/body//figure[not(contains(@type, 'table'))]/head
figure_captions = text/body//figure[not(contains(@type, 'table'))]/figDesc
figure_label_captions = generic-concat-children(text/body//figure[not(contains(@type, 'table'))], '$head', ' ', '$figDesc')
